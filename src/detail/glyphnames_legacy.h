// This file is auto-generated. Do not edit manually.
//
// SPDX-FileCopyrightText: Generated by smufl_mapping (2025)
// SPDX-License-Identifier: MIT
//
// Source project: https://github.com/rpatters1/smufl-mapping
//
// This header was generated from SMuFL font metadata provided by SMuFL and Finale
// and is part of the internal implementation of the smufl_mapping project.
//
// To regenerate this file, run tools/generate_glyphnames_map.py
#pragma once

#include "smufl_mapping.h"

#include "detail/legacy/broadway_copyist_legacy_map.h"
#include "detail/legacy/broadway_copyist_perc_legacy_map.h"
#include "detail/legacy/broadway_copyist_text_legacy_map.h"
#include "detail/legacy/broadway_copyist_text_ext_legacy_map.h"
#include "detail/legacy/chaconne_legacy_map.h"
#include "detail/legacy/engraver_font_extras_legacy_map.h"
#include "detail/legacy/engraver_font_set_legacy_map.h"
#include "detail/legacy/engraver_text_h_legacy_map.h"
#include "detail/legacy/engraver_text_ncs_legacy_map.h"
#include "detail/legacy/engraver_text_t_legacy_map.h"
#include "detail/legacy/engraver_time_legacy_map.h"
#include "detail/legacy/finale_alphanotes_legacy_map.h"
#include "detail/legacy/finale_copyist_text_legacy_map.h"
#include "detail/legacy/finale_copyist_text_ext_legacy_map.h"
#include "detail/legacy/finale_mallets_legacy_map.h"
#include "detail/legacy/finale_numerics_legacy_map.h"
#include "detail/legacy/finale_percussion_legacy_map.h"
#include "detail/legacy/gracenotes_legacy_map.h"
#include "detail/legacy/jazz_legacy_map.h"
#include "detail/legacy/jazzcord_legacy_map.h"
#include "detail/legacy/jazzperc_legacy_map.h"
#include "detail/legacy/jazztext_legacy_map.h"
#include "detail/legacy/jazztext_extended_legacy_map.h"
#include "detail/legacy/kousaku_legacy_map.h"
#include "detail/legacy/kousaku_percussion_legacy_map.h"
#include "detail/legacy/maestro_legacy_map.h"
#include "detail/legacy/maestro_percussion_legacy_map.h"
#include "detail/legacy/maestro_wide_legacy_map.h"
#include "detail/legacy/maestrotimes_legacy_map.h"
#include "detail/legacy/patmm_legacy_map.h"
#include "detail/legacy/petrucci_legacy_map.h"
#include "detail/legacy/pmusic_legacy_map.h"
#include "detail/legacy/rentaro_legacy_map.h"
#include "detail/legacy/tamburo_legacy_map.h"

namespace smufl_mapping::detail {

struct LegacyFontMapping {
    const std::pair<char32_t, LegacyGlyphInfo>* table;
    std::size_t size;
};

constexpr std::pair<std::string_view, LegacyFontMapping> legacyFontMappings[] = {
    { "broadway copyist", {legacy::broadwayCopyistLegacyGlyphs, std::size(legacy::broadwayCopyistLegacyGlyphs)} },
    { "broadway copyist perc", {legacy::broadwayCopyistPercLegacyGlyphs, std::size(legacy::broadwayCopyistPercLegacyGlyphs)} },
    { "broadway copyist text", {legacy::broadwayCopyistTextLegacyGlyphs, std::size(legacy::broadwayCopyistTextLegacyGlyphs)} },
    { "broadway copyist text ext", {legacy::broadwayCopyistTextExtLegacyGlyphs, std::size(legacy::broadwayCopyistTextExtLegacyGlyphs)} },
    { "chaconne", {legacy::chaconneLegacyGlyphs, std::size(legacy::chaconneLegacyGlyphs)} },
    { "engraver font extras", {legacy::engraverFontExtrasLegacyGlyphs, std::size(legacy::engraverFontExtrasLegacyGlyphs)} },
    { "engraver font set", {legacy::engraverFontSetLegacyGlyphs, std::size(legacy::engraverFontSetLegacyGlyphs)} },
    { "engraver text h", {legacy::engraverTextHLegacyGlyphs, std::size(legacy::engraverTextHLegacyGlyphs)} },
    { "engraver text ncs", {legacy::engraverTextNcsLegacyGlyphs, std::size(legacy::engraverTextNcsLegacyGlyphs)} },
    { "engraver text t", {legacy::engraverTextTLegacyGlyphs, std::size(legacy::engraverTextTLegacyGlyphs)} },
    { "engraver time", {legacy::engraverTimeLegacyGlyphs, std::size(legacy::engraverTimeLegacyGlyphs)} },
    { "finale alphanotes", {legacy::finaleAlphanotesLegacyGlyphs, std::size(legacy::finaleAlphanotesLegacyGlyphs)} },
    { "finale copyist text", {legacy::finaleCopyistTextLegacyGlyphs, std::size(legacy::finaleCopyistTextLegacyGlyphs)} },
    { "finale copyist text ext", {legacy::finaleCopyistTextExtLegacyGlyphs, std::size(legacy::finaleCopyistTextExtLegacyGlyphs)} },
    { "finale mallets", {legacy::finaleMalletsLegacyGlyphs, std::size(legacy::finaleMalletsLegacyGlyphs)} },
    { "finale numerics", {legacy::finaleNumericsLegacyGlyphs, std::size(legacy::finaleNumericsLegacyGlyphs)} },
    { "finale percussion", {legacy::finalePercussionLegacyGlyphs, std::size(legacy::finalePercussionLegacyGlyphs)} },
    { "gracenotes", {legacy::gracenotesLegacyGlyphs, std::size(legacy::gracenotesLegacyGlyphs)} },
    { "jazz", {legacy::jazzLegacyGlyphs, std::size(legacy::jazzLegacyGlyphs)} },
    { "jazzcord", {legacy::jazzcordLegacyGlyphs, std::size(legacy::jazzcordLegacyGlyphs)} },
    { "jazzperc", {legacy::jazzpercLegacyGlyphs, std::size(legacy::jazzpercLegacyGlyphs)} },
    { "jazztext", {legacy::jazztextLegacyGlyphs, std::size(legacy::jazztextLegacyGlyphs)} },
    { "jazztext extended", {legacy::jazztextExtendedLegacyGlyphs, std::size(legacy::jazztextExtendedLegacyGlyphs)} },
    { "kousaku", {legacy::kousakuLegacyGlyphs, std::size(legacy::kousakuLegacyGlyphs)} },
    { "kousaku percussion", {legacy::kousakuPercussionLegacyGlyphs, std::size(legacy::kousakuPercussionLegacyGlyphs)} },
    { "maestro", {legacy::maestroLegacyGlyphs, std::size(legacy::maestroLegacyGlyphs)} },
    { "maestro percussion", {legacy::maestroPercussionLegacyGlyphs, std::size(legacy::maestroPercussionLegacyGlyphs)} },
    { "maestro wide", {legacy::maestroWideLegacyGlyphs, std::size(legacy::maestroWideLegacyGlyphs)} },
    { "maestrotimes", {legacy::maestrotimesLegacyGlyphs, std::size(legacy::maestrotimesLegacyGlyphs)} },
    { "patmm", {legacy::patmmLegacyGlyphs, std::size(legacy::patmmLegacyGlyphs)} },
    { "petrucci", {legacy::petrucciLegacyGlyphs, std::size(legacy::petrucciLegacyGlyphs)} },
    { "pmusic", {legacy::pmusicLegacyGlyphs, std::size(legacy::pmusicLegacyGlyphs)} },
    { "rentaro", {legacy::rentaroLegacyGlyphs, std::size(legacy::rentaroLegacyGlyphs)} },
    { "tamburo", {legacy::tamburoLegacyGlyphs, std::size(legacy::tamburoLegacyGlyphs)} },
};

} // namespace smufl_mapping::detail
